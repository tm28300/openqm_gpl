<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head><script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if(top.frames.length==0) { top.location.href="index.html?qmb_debugger.htm"; }
else { parent.quicksync('a7.9'); }
//-->
</script>
<script type="text/javascript" src="highlight.js"></script>
   <title>QMBasic Debugger</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="QMBasic debugger,Debugger" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#649CCC">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">QMBasic Debugger</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="_.htm"><img src="top.gif" border=0 alt="Top"></a>&nbsp;
     <a href="qmbs_vocrec.htm"><img src="previous.gif" border=0 alt="Previous"></a>&nbsp;
     <a href="processdumpfile.htm"><img src="next.gif" border=0 alt="Next"></a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The QM interactive debugger enables the developer to step through an application program in a convenient manner, stopping at desired points and examining data items.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Programs to be debugged must be compiled with the </span><span style="font-weight: bold; color: #000000;">DEBUGGING</span><span style="color: #000000;"> option to the </span><span style="font-weight: bold; color: #000000;"><a href="basic.htm">BASIC</a></span><span style="color: #000000;"> command or by including the </span><span style="font-weight: bold; color: #000000;"><a href="qmbd_debug.htm">$DEBUG</a></span><span style="color: #000000;"> compiler directive in the program source. At run time, the debugger will stop at selected places in the execution of these programs but will run normally through programs not compiled in this mode. Catalogued programs and subroutines may be debugged in exactly the same way as other programs.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The debugger is activated either by use of the </span><span style="font-weight: bold; color: #000000;"><a href="debug.htm">DEBUG</a></span><span style="color: #000000;"> command in place of </span><span style="font-weight: bold; color: #000000;"><a href="run.htm">RUN</a></span><span style="color: #000000;"> or by a </span><span style="font-weight: bold; color: #000000;"><a href="qmb_debug.htm">DEBUG</a></span><span style="color: #000000;"> statement encountered during execution of a program. The latter method enables debug mode to be entered part way through execution of the program. The debugger can also be entered from the quit confirmation prompt if any program currently being executed has been compiled in debug mode.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">During application development it is often worth compiling the entire application in debug mode. Execution of the program with the </span><span style="font-weight: bold; color: #000000;"><a href="run.htm">RUN</a></span><span style="color: #000000;"> command will not invoke the debugger unless a&nbsp; </span><span style="font-weight: bold; color: #000000;"><a href="qmb_debug.htm">DEBUG</a></span><span style="color: #000000;"> statement is encountered. There is a small performance impact of running a debug mode program in this way but it is usually not significant.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Phantom processes and those acting as the server side of a QMClient connection can be debugged using the </span><span style="font-weight: bold; color: #000000;"><a href="pdebug.htm">PDEBUG</a></span><span style="color: #000000;"> command.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The debugger will identify the program from which it was entered and locate the source program record. If this is not available, a warning is displayed and execution of the program continues in non-debug mode though other programs and subroutines called by it will still be subject to debugging if their source records are available.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">When used with QMConsole on a Windows system, via the QMTerm terminal emulator or the bundled version of AccuTerm, the debugger operates in full screen mode. The display is divided into two areas. The upper portion of the screen shows the source program with the line about to be executed highlighted. The lower portion of the screen is used to echo commands and to display their responses. The top line of the screen displays the program name and current line and element number. The display may be toggled between the debugger and the application by use of the F4 key. Full screen mode also supports a command stack similar to that found at the command prompt.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">When used on other terminals, the debugger output is mixed with the application output.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The current position in a program is referenced by a line number and an element number. Most </span><span style="color: #000000;">QMBasic</span><span style="color: #000000;"> source lines hold only a single element (element 0) but lines with multiple statements separated by semicolons or clauses of </span><span style="font-weight: bold; color: #000000;"><a href="qmb_if.htm">IF/THEN/ELSE</a></span><span style="color: #000000;"> constructs, etc, are considered to represent separate execution elements. The debugger can step line by line or element by element through a program.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The debugger cannot step through statements inserted into a program from an include record. In such cases, it will step over the included statements as though they were part of the immediately preceding statement.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Debugger commands fall into two groups; function keys and word based commands. In many cases both forms are available. Not all terminals support function keys.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Function Key Commands</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">(Some function keys may not be available on all terminal emulations)</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">F1</span></td><td><span style="color: #000000;">Display help screen</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">F2</span></td><td><span style="color: #000000;">Abort program</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">F3</span></td><td><span style="color: #000000;">Stop program</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">F4</span></td><td><span style="color: #000000;">Display user screen (normal program output)</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">F5</span></td><td><span style="color: #000000;">Free run</span></td></tr></table></div><p style="text-indent: -90px; margin: 0px 0px 0px 120px;"><span style="color: #000000;">F6</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">F7</span></td><td><span style="color: #000000;">Step program element</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">F8</span></td><td><span style="color: #000000;">Step line</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">Ctrl-F7</span></td><td><span style="color: #000000;">Run to parent program / subroutine (internal or external)</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="color: #000000;">Ctrl-F8</span></td><td><span style="color: #000000;">Exit program, returning to parent program or external subroutine</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">If an application dynamically rebinds the codes sent by keys used by the debugger, setting the DEBUG.REBIND.KEYS mode of the&nbsp; </span><span style="font-weight: bold; color: #000000;"><a href="option.htm">OPTION</a></span><span style="color: #000000;"> command will cause the debugger to reset these to the bindings specified in the terminfo entry for the current terminal type on each entry to the debug screen. Note that the debugger cannot revert to the user bindings on exit as it has no way to determine what these were. This feature is available only with AccuTerm.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Word Based Commands</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Where a short form is available, this is the upper case portion of the command as shown. Commands may be entered in any mix of upper and lower case.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">ABORT</span></td><td><span style="color: #000000;">Quit the program, generating an abort.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">BRK</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Set a breakpoint on line </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">CLR</span></td><td><span style="color: #000000;">Clear all breakpoints.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">CLR</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Clear breakpoint on line </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">DUMP</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">var path</span></td><td><span style="color: #000000;">Dumps a variable to an operating system level file.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">EP</span></td><td><span style="color: #000000;">Exit program, returning to parent program or external subroutine.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">EXit</span></td><td><span style="color: #000000;">Exit subroutine, returning to parent program, internal or external subroutine.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">Goto</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Continue execution at line </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">HELP</span></td><td><span style="color: #000000;">Display help page.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">Quit</span></td><td><span style="color: #000000;">Quit the program, generating an abort.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">Run</span></td><td><span style="color: #000000;">Free run.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">Run</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Run to line </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SET</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">var</span><span style="font-weight: bold; color: #000000;">=</span><span style="font-style: italic; color: #000000;">value</span></td><td><span style="color: #000000;">Change content of a program variable</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">STACK</span></td><td><span style="color: #000000;">Display the call stack. The current program is shown first.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">Step</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Execute </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;"> lines.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">Step .</span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Execute </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;"> elements.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">STOP</span></td><td><span style="color: #000000;">Quit the program, generating a stop.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">UnWatch</span></td><td><span style="color: #000000;">Cancels an active watch action.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">View</span></td><td><span style="color: #000000;">Display user screen (normal program output)</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">Watch</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">var</span></td><td><span style="color: #000000;">Watches the named variable.</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The following commands apply only to full screen mode debugging:</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SRC</span></td><td><span style="color: #000000;">Revert to default program source display</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SRC</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">name</span></td><td><span style="color: #000000;">Show source of program </span><span style="font-style: italic; color: #000000;">name</span><span style="color: #000000;">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SRC</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Display around line </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;"> of currently displayed program.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SRC +</span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Move display forward </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;"> lines in program.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SRC -</span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Move display backward </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;"> lines in program.</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The following commands apply only to non-full screen mode debugging:</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SRC</span></td><td><span style="color: #000000;">Display current source line</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SRC</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">n</span></td><td><span style="color: #000000;">Display source line </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;">. Entering a blank debugger command line after this command will display the next source line.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 10px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-weight: bold; color: #000000;">SRC</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">n</span><span style="font-style: italic; font-weight: bold; color: #000000;">,</span><span style="font-style: italic; color: #000000;">m</span></td><td><span style="color: #000000;">Display </span><span style="font-style: italic; color: #000000;">m</span><span style="color: #000000;"> lines starting at source line </span><span style="font-style: italic; color: #000000;">n</span><span style="color: #000000;">. The value of </span><span style="font-style: italic; color: #000000;">m</span><span style="color: #000000;"> is limited to three lines less than the screen size. Entering a blank debugger command line after this command will display the next </span><span style="font-style: italic; color: #000000;">m</span><span style="color: #000000;"> source lines.</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Displaying Program Variables</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Entering a variable name preceded or followed by a slash (/) or a question mark (?) displays the type and content of the given variable (</span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;">/, /</span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;">, </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;">?, ?</span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;">). This name may be a variable in a common block defined in the current program. If the common block has not been linked at the time the command is entered, the variable will appear as unassigned. For programs compiled with case insensitive names, the debugger is also case insensitive.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Private local variables in a subroutine declared using the </span><span style="font-weight: bold; color: #000000;">LOCAL</span><span style="color: #000000;"> statement can be referenced using a name formed by concatenating the subroutine name and variable name with a colon between them. If a subroutine is executed recursively, it is only possible to view the current instance of the variables.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The debugger will not recognise names defined using </span><span style="font-weight: bold; color: #000000;"><a href="qmb_equate.htm">EQUATE</a></span><span style="color: #000000;"> or </span><span style="font-weight: bold; color: #000000;"><a href="qmbd_define.htm">$DEFINE</a></span><span style="color: #000000;">.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The debugger recognises variable names </span><span style="font-weight: bold; color: #000000;"><a href="qmb_status.htm">STATUS()</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_inmat.htm">INMAT()</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_col1.htm">COL1()</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_col2.htm">COL2()</a></span><span style="color: #000000;"> and </span><span style="font-weight: bold; color: #000000;"><a href="qmb_os_error.htm">OS.ERROR()</a></span><span style="color: #000000;"> to display the corresponding system variable. All @-variables may also be displayed except for <a href="at_variables.htm#voc">@VOC</a> (which is a file variable) and those representing constants such as @FM and @TRUE.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Display of long strings is broken into short sections to fit the available display space. Entering </span><span style="font-weight: bold; color: #000000;">Q</span><span style="color: #000000;"> at the continuation prompt will terminate display.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">When displaying strings with an active remove pointer, the position of this pointer is also shown.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">If the variable is a matrix, the name may be followed by the index value(s) for the element to be displayed. Entry of the name without an index will display the dimensions of the matrix. Subsequent presses of the return key display successive elements of the matrix until either all elements have been displayed or another command is entered.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">CLI.REC/</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">Array: Dim (20)</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="color: #000000;">&lt;return&gt;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">CLI.REC(0) = Unassigned</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="color: #000000;">&lt;return&gt;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">CLI.REC(1) = String (8 bytes): &quot;J Watson&quot;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="color: #000000;">&lt;return&gt;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">CLI.REC(2) = 13756</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">CLI.REC(8)/</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">Integer: 86</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The variable name may be followed by a field, value or subvalue reference which will be used to restrict the display if the data is a string. Note that this qualifier has no effect on other data types.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">REC/</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">String (11 bytes,R=4): &quot;487</span><span style="font-size: 6pt; font-family: 'Courier New'; font-style: italic; color: #000000;">FM</span><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">912</span><span style="font-size: 6pt; font-family: 'Courier New'; font-style: italic; color: #000000;">VM</span><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">338&quot;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">REC&lt;1&gt;/</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">String (3 bytes): &quot;487&quot;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">REC&lt;2,1&gt;/</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; font-style: italic; color: #000000;">String (3 bytes): &quot;912&quot;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Entering a slash alone will repeat the most recent display command.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Analysis of very large character strings is sometime easier from outside the debugger. The </span><span style="font-weight: bold; color: #000000;">DUMP</span><span style="color: #000000;"> command can be used to dump the contents of a variable to an operating system level file that can then be processed with other tools.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Changing Program Variables</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">SET</span><span style="color: #000000;"> command can be used to alter the value of a variable.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="239"><span style="color: #000000;">SET </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;"> = </span><span style="font-style: italic; color: #000000;">value</span></td><td><span style="color: #000000;">to set a numeric value</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="239"><span style="color: #000000;">SET </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;"> = &quot;</span><span style="font-style: italic; color: #000000;">string</span><span style="color: #000000;">&quot;</span></td><td><span style="color: #000000;">to set a string value. Double quotes, single quotes or backslashes may be used to enclose the string.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="239"><span style="color: #000000;">SET </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;">(</span><span style="font-style: italic; color: #000000;">row</span><span style="color: #000000;">,</span><span style="font-style: italic; color: #000000;">col</span><span style="color: #000000;">)</span><span style="color: #000000;"> = </span><span style="font-style: italic; color: #000000;">value</span></td><td><span style="color: #000000;">to set a matrix element</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Watching Variables</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">WATCH</span><span style="color: #000000;"> command causes the debugger to monitor the named variable. Whenever a value is assigned to this variable (even if the value is the same as currently stored), the debugger will stop program execution and display the new value. Only one variable can be watched at a time.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">UNWATCH</span><span style="color: #000000;"> command cancels the watch action. The watch action is automatically cancelled when the watched variable ceases to exist. This might be return from the program in which the program exists, redimensioning a common block, etc.</span></p>

</td></tr></table>

</body>
</html>
