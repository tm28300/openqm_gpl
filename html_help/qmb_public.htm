<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head><script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if(top.frames.length==0) { top.location.href="index.html?qmb_public.htm"; }
else { parent.quicksync('a7.5.198'); }
//-->
</script>
<script type="text/javascript" src="highlight.js"></script>
   <title>PUBLIC</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="PUBLIC" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#649CCC">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">PUBLIC</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="_.htm"><img src="top.gif" border=0 alt="Top"></a>&nbsp;
     <a href="qmb_prompt.htm"><img src="previous.gif" border=0 alt="Previous"></a>&nbsp;
     <a href="qmb_pwr.htm"><img src="next.gif" border=0 alt="Next"></a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">PUBLIC</span><span style="color: #000000;"> statement defines public property variables, subroutines and functions in a class module.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Format</span></p>
<p><span style="font-weight: bold; color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">PUBLIC</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">var</span><span style="font-weight: bold; color: #000000;">, </span><span style="font-style: italic; color: #000000;">mat</span><span style="font-weight: bold; color: #000000;">(</span><span style="font-style: italic; color: #000000;">rows</span><span style="font-weight: bold; color: #000000;">, </span><span style="font-style: italic; color: #000000;">cols</span><span style="font-weight: bold; color: #000000;">),</span><span style="color: #000000;"> ...</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">PUBLIC SUBROUTINE</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">name</span><span style="color: #000000;">{</span><span style="font-weight: bold; color: #000000;">(</span><span style="font-style: italic; color: #000000;">arg1</span><span style="font-weight: bold; color: #000000;">,</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">arg2</span><span style="font-weight: bold; color: #000000;">)</span><span style="color: #000000;">} {</span><span style="font-weight: bold; color: #000000;">VAR.ARGS</span><span style="color: #000000;">}</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="color: #000000;">...</span><span style="font-style: italic; color: #000000;">statements</span><span style="color: #000000;">...</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">END</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">PUBLIC FUNCTION</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">name</span><span style="color: #000000;">{</span><span style="font-weight: bold; color: #000000;">(</span><span style="font-style: italic; color: #000000;">arg1</span><span style="font-weight: bold; color: #000000;">,</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">arg2</span><span style="font-weight: bold; color: #000000;">)</span><span style="color: #000000;">} {</span><span style="font-weight: bold; color: #000000;">VAR.ARGS</span><span style="color: #000000;">}</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="color: #000000;">...</span><span style="font-style: italic; color: #000000;">statements</span><span style="color: #000000;">...</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">END</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">where</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-style: italic; color: #000000;">var</span></td><td><span style="color: #000000;">is a simple scalar variable. The variable name may be followed by </span><span style="font-weight: bold; color: #000000;">READONLY</span><span style="color: #000000;"> to indicate that external references to the variable may not update it.</span></td></tr></table></div><p style="text-indent: -150px; margin: 0px 0px 0px 180px;"><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-style: italic; color: #000000;">mat</span><span style="font-weight: bold; color: #000000;">(</span><span style="font-style: italic; color: #000000;">rows</span><span style="font-weight: bold; color: #000000;">, </span><span style="font-style: italic; color: #000000;">cols</span><span style="font-weight: bold; color: #000000;">)</span></td><td><span style="color: #000000;">is a dimensioned matrix name. The </span><span style="font-style: italic; color: #000000;">rows</span><span style="color: #000000;"> and </span><span style="font-style: italic; color: #000000;">cols</span><span style="color: #000000;"> values must be numeric constants. The dimension values may be followed by </span><span style="font-weight: bold; color: #000000;">READONLY</span><span style="color: #000000;"> to indicate that external references to the variable may not update it.</span></td></tr></table></div><p style="text-indent: -150px; margin: 0px 0px 0px 180px;"><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-style: italic; color: #000000;">name</span><span style="font-weight: bold; color: #000000;">(</span><span style="font-style: italic; color: #000000;">arg1</span><span style="font-weight: bold; color: #000000;">,</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">arg2</span><span style="font-weight: bold; color: #000000;">)</span></td><td><span style="color: #000000;">is the subroutine or function name and an optional list of arguments. See the </span><span style="font-weight: bold; color: #000000;"><a href="qmb_class.htm">CLASS</a></span><span style="color: #000000;"> statement for the maximum number of arguments allowed in this list. Specifying the final argument name as three periods (...) effectively extends the argument list to the maximum permissible length with unnamed arguments that may be accessed using the </span><span style="font-weight: bold; color: #000000;"><a href="qmb_arg.htm">ARG()</a></span><span style="color: #000000;"> function. Use of this syntax automatically implies the VAR.ARGS option which must not also be present.</span></td></tr></table></div><p style="text-indent: -150px; margin: 0px 0px 0px 180px;"><span style="font-style: italic; color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Note that the equivalence of a function to a subroutine with a hidden first argument as found with the </span><span style="font-weight: bold; color: #000000;"><a href="qmb_subroutine.htm">SUBROUTINE</a></span><span style="color: #000000;"> and </span><span style="font-weight: bold; color: #000000;"><a href="qmb_function.htm">FUNCTION</a></span><span style="color: #000000;"> statements does not apply to public subroutines and functions.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Examples</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">PUBLIC FUNCTION CONNECT(SERVER, PORT)</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; SKT = OPEN.SOCKET(SERVER, PORT, SKT$BLOCKING)</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; RETURN STATUS() = 0</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">END</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The above function takes a fixed length list of two arguments and uses the supplied values to open a socket connection to a remote server. The SKT variable in this example would be a private variable within the class module.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">PUBLIC FUNCTION CONNECT(SERVER, PORT) VAR.ARGS</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; IF UNASSIGNED(PORT) THEN PORT = 4000</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; SKT = OPEN.SOCKET(SERVER, PORT, SKT$BLOCKING)</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; RETURN STATUS() = 0</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">END</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">This example extends the previous one by making the PORT argument optional and, if it is not supplied by the caller, defaulting it to 4000.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">PUBLIC SUBROUTINE INSERT.ITEMS(ID, ...)</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; READU REC FROM FVAR, ID ELSE NULL</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; FOR I = 2 TO ARG.COUNT()</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp; VALUE = ARG(I)</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp; LOCATE VALUE IN REC&lt;1&gt; BY 'AL' SETTING POS ELSE</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; INS VALUE BEFORE REC&lt;POS&gt;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp; END</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; NEXT I</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; WRITE REC TO FVAR, ID</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">END</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">This example uses the ... syntax to specify a variable length argument list of the maximum permissible length. It reads a record identified by the ID argument and then inserts all items from the remaining arguments that are not already in the record.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">See also:</span></p>
<p><span style="color: #000000;"><a href="qmbasic_objects.htm">Object oriented programming</a>, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_class.htm">CLASS</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_disinherit.htm">DISINHERIT</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_inherit.htm">INHERIT</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_object.htm">OBJECT()</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_private.htm">PRIVATE</a></span></p>

</td></tr></table>

</body>
</html>
