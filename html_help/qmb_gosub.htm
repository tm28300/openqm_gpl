<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head><script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if(top.frames.length==0) { top.location.href="index.html?qmb_gosub.htm"; }
else { parent.quicksync('a7.5.108'); }
//-->
</script>
<script type="text/javascript" src="highlight.js"></script>
   <title>GOSUB</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="GOSUB" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#649CCC">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">GOSUB</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="_.htm"><img src="top.gif" border=0 alt="Top"></a>&nbsp;
     <a href="qmb_getrem.htm"><img src="previous.gif" border=0 alt="Previous"></a>&nbsp;
     <a href="qmb_goto.htm"><img src="next.gif" border=0 alt="Next"></a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p style="margin: 0px 0px 5px 0px;"><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">GOSUB</span><span style="color: #000000;"> statement calls an internal subroutine.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Format</span></p>
<p><span style="font-weight: bold; color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">GOSUB</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">label</span><span style="color: #000000;">{</span><span style="font-weight: bold; color: #000000;">:</span><span style="color: #000000;">}</span></p>
<p style="margin: 10px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">GOSUB</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">label</span><span style="color: #000000;">{</span><span style="font-weight: bold; color: #000000;">:</span><span style="color: #000000;">}</span><span style="font-weight: bold; color: #000000;">(</span><span style="font-style: italic; color: #000000;">args</span><span style="font-weight: bold; color: #000000;">)</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">where</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="font-style: italic; color: #000000;">label</span></td><td><span style="color: #000000;">is the label attached to the statement at the start of the internal subroutine.</span></td></tr></table></div><p style="text-indent: -90px; margin: 0px 0px 0px 120px;"><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="90"><span style="font-style: italic; color: #000000;">args</span></td><td><span style="color: #000000;">is a comma separated list of arguments to a subroutine defined with the </span><span style="font-weight: bold; color: #000000;"><a href="qmb_local.htm">LOCAL SUBROUTINE</a></span><span style="color: #000000;"> statement.</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The optional colon after the </span><span style="font-style: italic; color: #000000;">label</span><span style="color: #000000;"> has no effect on the action of the statement.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The program continues execution at the given </span><span style="font-style: italic; color: #000000;">label</span><span style="color: #000000;">, saving the location of the </span><span style="font-weight: bold; color: #000000;">GOSUB</span><span style="color: #000000;"> for a later </span><span style="font-weight: bold; color: #000000;"><a href="qmb_return.htm">RETURN</a></span><span style="color: #000000;"> which will resume execution at the statement following the </span><span style="font-weight: bold; color: #000000;">GOSUB</span><span style="color: #000000;">. See also the&nbsp; </span><span style="font-weight: bold; color: #000000;"><a href="qmb_return.htm">RETURN TO</a></span><span style="color: #000000;"> statement for details of alternate returns.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">QMBasic defines two styles of internal subroutine. A conventional internal subroutine, as found in other multivalue database products, has no formal start or end. The </span><span style="font-style: italic; color: #000000;">label</span><span style="color: #000000;"> may be any label defined within the program or subroutine. It is the programmer's responsibility to ensure that internal subroutines return correctly. Variables referenced in the internal subroutine are accessible across the entire program module, requiring great care from the programmer to ensure that data in one part of the module is not accidentally altered elsewhere by use of the same name. Loop counters in </span><span style="font-weight: bold; color: #000000;"><a href="qmb_for.htm">FOR/NEXT</a></span><span style="color: #000000;"> loops are a good example of where this frequently happens. Calling this style of internal subroutine recursively is possible but of limited use because the variables in one invocation will be overwritten by the next.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The second style, referred to in QMBasic terminology as a local subroutine, is introduced by the </span><span style="font-weight: bold; color: #000000;"><a href="qmb_local.htm">LOCAL</a></span><span style="color: #000000;"> statement and is terminated by </span><span style="font-weight: bold; color: #000000;">END</span><span style="color: #000000;">. Local subroutines may have arguments and may have private local variables that are not visible outside the subroutine which are stacked if the subroutine is called recursively.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Examples</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">IF STOCK.LEVEL &lt;= REORDER.LEVEL THEN GOSUB REORDER</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">This program fragment checks if the value of STOCK.LEVEL has fallen to the REORDER.LEVEL and, if so, calls internal subroutine REORDER.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">LOCAL SUBROUTINE UPDATE.STOCK(PROD.NO, CHANGE)</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; PRIVATE STOCK.REC</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; READU STOCK.REC FROM STOCK.F, PROD.NO THEN</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp; STOCK.REC&lt;STK.QOH&gt; += CHANGE</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp; WRITE STOCK.REC TO STOCK.F, PROD.NO</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; END</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; RETURN</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">END</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The above local subroutine takes a record id and the amount by which a field is to be updated, reads the corresponding record and applies the update. A real program would include statements to handle the case where the record is not found.</span></p>

</td></tr></table>

</body>
</html>
