<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head><script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if(top.frames.length==0) { top.location.href="index.html?qmb_common.htm"; }
else { parent.quicksync('a7.5.43'); }
//-->
</script>
<script type="text/javascript" src="highlight.js"></script>
   <title>COMMON</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="COMMON" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#649CCC">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">COMMON</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="_.htm"><img src="top.gif" border=0 alt="Top"></a>&nbsp;
     <a href="qmb_col2.htm"><img src="previous.gif" border=0 alt="Previous"></a>&nbsp;
     <a href="qmb_compare.htm"><img src="next.gif" border=0 alt="Next"></a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">COMMON</span><span style="color: #000000;"> statement declares variables in a common block.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Format</span></p>
<p><span style="font-weight: bold; color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">COMMON</span><span style="color: #000000;"> {/</span><span style="font-style: italic; color: #000000;">name</span><span style="font-weight: bold; color: #000000;">/</span><span style="color: #000000;">} </span><span style="font-style: italic; color: #000000;">var1</span><span style="color: #000000;"> {</span><span style="font-weight: bold; color: #000000;">,</span><span style="font-style: italic; color: #000000;">var2</span><span style="color: #000000;">...}</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">where</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="91"><span style="font-style: italic; color: #000000;">name</span></td><td><span style="color: #000000;">is the name of the common block</span></td></tr></table></div><p style="text-indent: -91px; margin: 0px 0px 0px 121px;"><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="91"><span style="font-style: italic; color: #000000;">var1</span><span style="color: #000000;">, etc</span></td><td><span style="color: #000000;">are variable names</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">COMMON</span><span style="color: #000000;"> statement is used to define variables as being in common blocks, that is, memory areas that may be used to pass data between different programs and subroutines.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The variable names may extend over multiple lines by splitting the statement after a comma. For example</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON /VARS/ VAR1, VAR2,</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VAR3, VAR4</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The same common block could be defined as</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON/VARS/ VAR1</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON/VARS/ VAR2</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON/VARS/ VAR3</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON/VARS/ VAR4</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The compiler assumes that definitions of variables with the same common block name are a continuation of previous definitions in the same block.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Common blocks are identified by the </span><span style="font-style: italic; color: #000000;">name</span><span style="color: #000000;"> that is used in the </span><span style="font-weight: bold; color: #000000;">COMMON</span><span style="color: #000000;"> statement. The name of a common block must conform to the same rules as a variable name. Multiple programs in the same process using the same name share the same variables. Named common blocks are created on the first reference to the name and remain in existence until exit from QM. There is also a common block with no name (</span><span style="font-weight: bold; color: #000000;">unnamed common</span><span style="color: #000000;">) which may be referred to by a </span><span style="font-weight: bold; color: #000000;">COMMON</span><span style="color: #000000;"> statement of the form</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON var1, var2</span></p>
<p><span style="color: #000000;">or</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON // var1, var2</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The unnamed common block is associated with a single command and is discarded on termination of the command that created it. Use of the </span><span style="font-weight: bold; color: #000000;"><a href="qmb_execute.htm">EXECUTE</a></span><span style="color: #000000;"> statement saves and removes any current unnamed common and restores it on completion of the executed command. </span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">A common block may contain any number of variables but the number of variables may not be increased by later redefinition. It is valid for a program to define fewer variables than in the original common block declaration. This is useful if a new item has been added at the end of a common block but not all programs have yet been recompiled.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Variables within a common block are referenced internally by position, not by name. Thus it would be possible (though not recommended) for different programs to use different names when accessing the same common block. Normally, the structure of a common block is best defined in an include record so that the same definition is used by all parts of the application.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">By default, the variables in a common block are initialised to integer zero when the block is created. It is thus possible to include </span><span style="color: #000000;">QMBasic</span><span style="color: #000000;"> code to perform further initialisation just once by statements of the form</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON /MYCOMMON/ INITIALISED,</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VAR1,</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VAR2,</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; VAR3,...etc...</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">IF NOT(INITIALISED) THEN</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; ...</span><span style="color: #000000;">do initialisation tasks...</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;"> &nbsp; INITIALISED = @TRUE</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">END</span></p>
<p><span style="font-weight: bold; color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">For compatibility with some other systems, the UNASSIGNED.COMMON option of the <a href="qmbd_mode.htm">$MODE</a> compiler directive can be used to specify that common blocks are to be created with their component variables left unassigned instead of being set to zero. This directive only affects the program that actually creates the common block (i.e. the first program executed that references the common). It has no effect if the common has already been created. It is possible for an application to mix assigned and unassigned common by careful placement of the $MODE directive.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Common blocks may contain matrices. These are defined by including the row and column bounds in the </span><span style="font-weight: bold; color: #000000;">COMMON</span><span style="color: #000000;"> statement, for example</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON /MYCOMMON/ MAT1(5,3)</span></p>
<p><span style="font-family: 'Courier'; color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">QM supports two styles of matrix with different characteristics. The <a href="qmbd_mode.htm">$MODE</a> compiler directive can be used to select Pick style matrices.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The default style of matrix includes a zero element and is resizeable. A matrix of this type in a common block can be redimensioned by a later </span><span style="font-weight: bold; color: #000000;"><a href="qmb_dim.htm">DIM</a></span><span style="color: #000000;"> statement.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Pick style matrices do not have a zero element and cannot be resized. A matrix of this type in a common block is equivalent to a series of simple variables. Thus, although not recommended, three programs could use very different views of the same five element common block.</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON A,B(3),C</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON X(2),Y,Z(2)</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-family: 'Courier New'; color: #000000;">COMMON P,Q,R,S,T</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>

</td></tr></table>

</body>
</html>
