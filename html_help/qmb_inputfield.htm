<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head><script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if(top.frames.length==0) { top.location.href="index.html?qmb_inputfield.htm"; }
else { parent.quicksync('a7.5.125'); }
//-->
</script>
<script type="text/javascript" src="highlight.js"></script>
   <title>INPUTFIELD</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="INPUTFIELD" />
   <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#649CCC">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">INPUTFIELD</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="_.htm"><img src="top.gif" border=0 alt="Top"></a>&nbsp;
     <a href="qmb_inputcsv.htm"><img src="previous.gif" border=0 alt="Previous"></a>&nbsp;
     <a href="qmb_ins.htm"><img src="next.gif" border=0 alt="Next"></a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">INPUTFIELD</span><span style="color: #000000;"> statement enables entry of data from the keyboard at a specific screen position or from previously stored </span><span style="font-weight: bold; color: #000000;">DATA</span><span style="color: #000000;"> statements. It differs from </span><span style="font-weight: bold; color: #000000;"><a href="qmb_input_at.htm">INPUT @</a></span><span style="color: #000000;"> in that it terminates on entry of any control character not recognised as an editing key. This allows application software to capture and handle control and function keys.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Format</span></p>
<p><span style="font-weight: bold; color: #000000;">&nbsp;</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="font-weight: bold; color: #000000;">INPUTFIELD</span><span style="color: #000000;"> </span><span style="font-weight: bold; color: #000000;">@(</span><span style="font-style: italic; color: #000000;">x</span><span style="font-weight: bold; color: #000000;">, </span><span style="font-style: italic; color: #000000;">y</span><span style="font-weight: bold; color: #000000;">)</span><span style="color: #000000;"> {</span><span style="font-weight: bold; color: #000000;">,</span><span style="color: #000000;">} {</span><span style="font-weight: bold; color: #000000;">:</span><span style="color: #000000;">} </span><span style="font-style: italic; color: #000000;">var</span><span style="font-weight: bold; color: #000000;">,</span><span style="color: #000000;"> </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> {</span><span style="font-weight: bold; color: #000000;">_</span><span style="color: #000000;">} {</span><span style="font-weight: bold; color: #000000;">:</span><span style="color: #000000;">} {</span><span style="font-style: italic; color: #000000;">format</span><span style="color: #000000;">} {</span><span style="font-style: italic; color: #000000;">modes</span><span style="color: #000000;">}</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="color: #000000;">{</span><span style="font-weight: bold; color: #000000;">THEN</span><span style="font-style: italic; color: #000000;"> statement(s)</span><span style="color: #000000;">}</span></p>
<p style="margin: 0px 0px 0px 30px;"><span style="color: #000000;">{</span><span style="font-weight: bold; color: #000000;">ELSE</span><span style="font-style: italic; color: #000000;"> statement(s)</span><span style="color: #000000;">}</span></p>
<p style="text-indent: 60px;"><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">where</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-style: italic; color: #000000;">x</span><span style="color: #000000;">, </span><span style="font-style: italic; color: #000000;">y</span></td><td><span style="color: #000000;">are the screen position (column and line) at which input is to occur.</span></td></tr></table></div><p style="text-indent: -150px; margin: 0px 0px 0px 180px;"><span style="font-style: italic; color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-style: italic; color: #000000;">var</span></td><td><span style="color: #000000;">is the variable in which the data is to be stored.</span></td></tr></table></div><p style="text-indent: -150px; margin: 0px 0px 0px 180px;"><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-style: italic; color: #000000;">length</span></td><td><span style="color: #000000;">is the maximum length of data to be allowed. Because of a potential syntactic ambiguity in the language, this must be enclosed in brackets if it is an expression.</span></td></tr></table></div><p style="text-indent: -150px; margin: 0px 0px 0px 180px;"><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-style: italic; color: #000000;">format</span></td><td><span style="color: #000000;">is the <a href="fmt_spec.htm">format specification</a> to the used for initial display of </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;"> and to redisplay the data on completion of input.</span></td></tr></table></div><p style="text-indent: -150px; margin: 0px 0px 0px 180px;"><span style="color: #000000;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="150"><span style="font-style: italic; color: #000000;">modes</span></td><td><span style="color: #000000;">are any combination of the following keywords:</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 6px 0px 0px 210px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="152"><span style="font-weight: bold; color: #000000;">APPEND</span></td><td><span style="color: #000000;">Position the cursor at the end of the data. Use of this keyword also implies </span><span style="font-weight: bold; color: #000000;">EDIT</span><span style="color: #000000;"> mode.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 6px 0px 0px 210px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="152"><span style="font-weight: bold; color: #000000;">EDIT</span></td><td><span style="color: #000000;">Starts in &quot;edit&quot; mode, suppressing the normal clearance of the input field if the first character entered by the user is a data character rather than an edit character.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 6px 0px 0px 210px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="152"><span style="font-weight: bold; color: #000000;">HIDDEN</span></td><td><span style="color: #000000;">echoes characters back to the screen as asterisks for password type fields.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 6px 0px 0px 210px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="152"><span style="font-weight: bold; color: #000000;">OVERLAY</span></td><td><span style="color: #000000;">Starts in &quot;overlay&quot; mode where data entered by the user replaces the character under the cursor rather than being inserted.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 6px 0px 0px 210px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="152"><span style="font-weight: bold; color: #000000;">PANNING</span></td><td><span style="color: #000000;">Allows entry of an unlimited number of characters in a field width of the given </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> by panning the data if it is longer than the display width. Use of this option requires </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> to be specified and implies the presence of the underscore.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 6px 0px 0px 210px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="152"><span style="font-weight: bold; color: #000000;">TIMEOUT </span><span style="font-style: italic; color: #000000;">wait</span></td><td><span style="color: #000000;">Sets a timeout period in seconds. If input is not received in this time, the </span><span style="font-weight: bold; color: #000000;">INPUTFIELD</span><span style="color: #000000;"> terminates, leaving </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;"> unchanged. The keywords </span><span style="font-weight: bold; color: #000000;">FOR</span><span style="color: #000000;"> or </span><span style="font-weight: bold; color: #000000;">WAITING</span><span style="color: #000000;"> can be used in place of </span><span style="font-weight: bold; color: #000000;">TIMEOUT</span><span style="color: #000000;"> for compatibility with other environments.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 6px 0px 0px 210px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="152"><span style="font-weight: bold; color: #000000;">UPCASE</span></td><td><span style="color: #000000;">converts the input data to uppercase.</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The comma after the cursor position is optional and has no effect on the operation of the statement.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The optional </span><span style="font-weight: bold; color: #000000;">THEN</span><span style="color: #000000;"> and </span><span style="font-weight: bold; color: #000000;">ELSE</span><span style="color: #000000;"> clauses used with </span><span style="font-weight: bold; color: #000000;">TIMEOUT</span><span style="color: #000000;"> allow a program to determine whether the input timed out. Successful input executes the </span><span style="font-weight: bold; color: #000000;">THEN</span><span style="color: #000000;"> clause. A timeout will execute the </span><span style="font-weight: bold; color: #000000;">ELSE</span><span style="color: #000000;"> clause.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">INPUTFIELD</span><span style="color: #000000;"> statement reads data from the </span><span style="font-weight: bold; color: #000000;">DATA</span><span style="color: #000000;"> queue or, if there is no stored data, from the keyboard.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">INPUTFIELD</span><span style="color: #000000;"> statement works similarly to the </span><span style="font-weight: bold; color: #000000;"><a href="qmb_input_at.htm">INPUT @</a></span><span style="color: #000000;"> statement except that entry of any control character not recognised as an editing function (see </span><span style="font-weight: bold; color: #000000;"><a href="qmb_input_at.htm">INPUT @</a></span><span style="color: #000000;">)&nbsp; terminates data entry. The </span><span style="font-weight: bold; color: #000000;"><a href="qmb_status.htm">STATUS()</a> </span><span style="color: #000000;">function can be used to determine the key that caused exit. This will return zero for the return key and the internal key code for any other key.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">When the return key is pressed to terminate input, if a format is specified, the data is redisplayed using this mask to apply format rules such as right justification.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">Keyboard Input</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">When reading from the keyboard, the current prompt character will be displayed to the left of the given input position. No prompt is displayed if the input column position, </span><span style="font-style: italic; color: #000000;">x</span><span style="color: #000000;">, is zero or if the prompt has been disabled using the </span><span style="font-weight: bold; color: #000000;"><a href="qmb_prompt.htm">PROMPT</a></span><span style="color: #000000;"> statement. The prompt character will be removed from the screen on completion of the input.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">If the colon character before </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;"> is present, the original contents or </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;"> are displayed in the input area and entry commences in overlay mode. If the colon character before </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;"> is not present, entry commences in insert mode with a blank field.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The user has three options:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="17"><span style="font-size: 11pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td><span style="color: #000000;">Pressing the return key retains the original content of </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;">. </span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="17"><span style="font-size: 11pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td><span style="color: #000000;">Typing a data character replaces the original content of </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;">, clearing any old displayed data (unless the </span><span style="font-weight: bold; color: #000000;">EDIT</span><span style="color: #000000;"> option is used).</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 30px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr style="vertical-align:baseline" valign="baseline"><td width="17"><span style="font-size: 11pt; font-family: 'Arial Unicode MS', 'Lucida Sans Unicode', 'Arial'; color: #000000;">&#8226;</span></td><td><span style="color: #000000;">Using an edit key (see below) allows the old data to be edited.</span></td></tr></table></div><p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The values stored for printing characters are the ASCII characters associated with the key. Non-printing characters result in stored character values as listed under <a href="key_codes.htm">Character Values for Terminal Input</a>.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">If no </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> expression is included, data characters are stored until the return key is pressed. </span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">If </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> is specified, up to that number of characters may be entered after which input is automatically terminated as though the return key had been pressed, any subsequent key entries being retained for the next </span><span style="font-weight: bold; color: #000000;">INPUT</span><span style="color: #000000;"> statement. The return key is not stored as part of the input data.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The </span><span style="font-weight: bold; color: #000000;">INPUTFIELD</span><span style="color: #000000;"> statement may not behave correctly if the </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> of the input field causes it to extend over multiple lines and the terminal in use does not automatically wrap from one line to the next when displaying long text output.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The optional underscore component of the statement suppresses the automatic input termination when </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> characters have been entered. Any number of characters may be entered but only </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> characters will be displayed.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">The optional colon causes the carriage return and line feed output when the return key is used or on reaching the input length limit to be suppressed.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">DATA Queue Input</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">Where the data queue is not empty, the </span><span style="font-weight: bold; color: #000000;">INPUT @</span><span style="color: #000000;"> statement reads the item at the head of this queue, copying it verbatim to </span><span style="font-style: italic; color: #000000;">var</span><span style="color: #000000;"> with no processing of any embedded control characters. The </span><span style="font-style: italic; color: #000000;">length</span><span style="color: #000000;"> expression is ignored. The item is displayed as though it had been typed.</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p><span style="font-weight: bold; color: #000000;">See also:</span></p>
<p><span style="font-weight: bold; color: #000000;"><a href="qmb_bindkey.htm">BINDKEY()</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_input_at.htm">INPUT@</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_keycode.htm">KEYCODE()</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_keyedit.htm">KEYEDIT</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_keyexit.htm">KEYEXIT</a></span><span style="color: #000000;">, </span><span style="font-weight: bold; color: #000000;"><a href="qmb_keytrap.htm">KEYTRAP</a></span></p>

</td></tr></table>

</body>
</html>
